Authentication 

password securly

locking down access

왜 Authentication이 필요하냐면 

user 데이터와 연관되어있는 데이터를 사용하는 부분들은 

로그인을 해야 사용하도록.

이메일로 비번을 입력해서 인증할때 필요 !

그리고 session을 만들고 session이 유저를  idenfier 해줌.

session이 없으면  request간에 정보를 전달할수 없음. 

200 return이 되면 session에 해당되는 cookie를 생성하고 

stores Session ID를 저장함. 

password는 encrypt 시켜야한다.

user 로그인을 안하면 user정보를 알수 없으니 routes 자체를 프로텍트 시켜야함

--시큐리티 CSRF Attacks
Cross-Site Request Forgery

people can abuse your sessions and trick

fake Site에 로그인 하게해서 session을 훔쳐서 

fake request를 구성해서 뱅킹 같은 결제를 하게 하는것. 

이걸 어떻게 막아야 하는가? 

사람들의 너의 views만을 이용하면 된다. fake views가 아니라 하지만 그렇게 하는게 어려우므로

use a so-called csrf token을 이용한다.

-----so-called csrf token

fake sites might send a request to your backend 

csrf 패키지가 valid token인지 확인한다.

이로 인해 fake sites가 보낸 request엔 token이 존재하지 않게된다. 

그리고 fake sites는 token을 guess할수 없다. 왜냐면 

random hashed value이고 only one value is valid 이기 때문에 이기 때문에 

views에서 csrf 토큰을 얻으려면 name="_csrf"를 통해서 얻어야 한다. 

패키지가 보고있는 name이라서. 

CSRF Protection은 모든 페이지에 적용해야한다. 
<input type="hidden" name="_csrf" value="<%=csrfToken %>">








